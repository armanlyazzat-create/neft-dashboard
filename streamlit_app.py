
import streamlit as st
import pandas as pd
import plotly.express as px

st.set_page_config(page_title="–ù–µ—Ñ—Ç—è–Ω–æ–π –î–∞—à–±–æ—Ä–¥", layout="wide")
st.title("üì¶ –ù–µ—Ñ—Ç—è–Ω–æ–π –î–∞—à–±–æ—Ä–¥ ‚Äì 2025")

# Load corrected data
df = pd.read_excel("–ë–∞–ª–∞–Ω—Å_–Ω–µ—Ñ—Ç–∏_–æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π_–∏—Å–ø—Ä–∞–≤–ª–µ–Ω.xlsx")
df["–î–∞—Ç–∞"] = pd.to_datetime(df["–î–∞—Ç–∞"], errors='coerce')

# Convert relevant columns to numeric
for col in [
    "–°–¥–∞—á–∞ –Ω–µ—Ñ—Ç–∏  –Ω–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª",
    "–°–¥–∞—á–∞ –Ω–µ—Ñ—Ç–∏ –≤ –ö–¢–û",
    "–ù–ü–° –ú–∞–∫–∞—Ç",
    "–ü–°–ü –ö–∞—Ä—Å–∞–∫"
]:
    df[col] = pd.to_numeric(df[col], errors='coerce')

# Sidebar: Month filter
months = sorted(df["–ú–µ—Å—è—Ü"].dropna().unique())
selected_month = st.sidebar.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—è—Ü", months)
filtered_df = df[df["–ú–µ—Å—è—Ü"] == selected_month]

st.subheader(f"üìÜ –î–∞–Ω–Ω—ã–µ –∑–∞ {selected_month}")

# Monthly totals for validation
kto_total = filtered_df["–°–¥–∞—á–∞ –Ω–µ—Ñ—Ç–∏ –≤ –ö–¢–û"].sum()
terminal_total = filtered_df["–°–¥–∞—á–∞ –Ω–µ—Ñ—Ç–∏  –Ω–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª"].sum()

if kto_total > terminal_total:
    st.error(f"‚ùå –í {selected_month} –æ–±—ä–µ–º –≤ –ö–¢–û ({kto_total:.2f}) –ø—Ä–µ–≤—ã—à–∞–µ—Ç –æ–±—ä–µ–º –Ω–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª ({terminal_total:.2f})")

# Plot 1: Terminal delivery
st.markdown("### üìà –°–¥–∞—á–∞ –Ω–µ—Ñ—Ç–∏ –Ω–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª")
fig1 = px.line(filtered_df, x="–î–∞—Ç–∞", y="–°–¥–∞—á–∞ –Ω–µ—Ñ—Ç–∏  –Ω–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª")
st.plotly_chart(fig1, use_container_width=True)

# Plot 2: Delivery to KTO
st.markdown("### üõ¢Ô∏è –°–¥–∞—á–∞ –Ω–µ—Ñ—Ç–∏ –≤ –ö–¢–û (–ù–ü–° –ú–∞–∫–∞—Ç + –ü–°–ü –ö–∞—Ä—Å–∞–∫)")
fig2 = px.line(filtered_df, x="–î–∞—Ç–∞", y="–°–¥–∞—á–∞ –Ω–µ—Ñ—Ç–∏ –≤ –ö–¢–û")
st.plotly_chart(fig2, use_container_width=True)

# Plot 3: KTO Components
st.markdown("### üß™ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ö–¢–û: –ù–ü–° –ú–∞–∫–∞—Ç –∏ –ü–°–ü –ö–∞—Ä—Å–∞–∫")
fig3 = px.bar(filtered_df, x="–î–∞—Ç–∞", y=["–ù–ü–° –ú–∞–∫–∞—Ç", "–ü–°–ü –ö–∞—Ä—Å–∞–∫"])
st.plotly_chart(fig3, use_container_width=True)

# Data table
st.markdown("### üìã –¢–∞–±–ª–∏—Ü–∞ –¥–∞–Ω–Ω—ã—Ö")
st.dataframe(filtered_df)
